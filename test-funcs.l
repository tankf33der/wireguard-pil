`(== 64 64)
(seed (in "/dev/urandom" (rd 8)))
(load "blake2s.l")
(load "functions.l")

(test
   (141 73 237 128 248 152 146 128 222 214 165 183 91 40 149 197 213 215 13 72 101 235 33 202 170 41 133 242 25 116 229 29)
   (dh_pubkey
      (203 107 104 95 173 233 228 248 76 191 139 222 244 239 244 200 3 216 199 225 17 253 137 203 28 184 126 90 150 41 226 0) ) )
(test
   (3 119 169 7 227 26 48 237 195 166 139 135 91 113 126 80 60 189 180 25 83 6 60 170 144 135 246 18 248 228 92 87)
   (dh
      (203 107 104 95 173 233 228 248 76 191 139 222 244 239 244 200 3 216 199 225 17 253 137 203 28 184 126 90 150 41 226 0)
      (169 16 176 101 34 136 158 179 0 171 155 30 165 240 157 104 43 17 37 170 11 123 152 225 183 55 226 195 176 163 111 3) ) )
(test
   (229 240 113 156 118 145 247 86 191 129 201 1 210 198 211 96 126 162 190 165 219 189 123 63 17 26 152 213 173 233 236 77)
   (hmac
      (96 226 109 174 243 39 239 192 46 195 53 226 160 37 210 208 22 235 66 6 248 114 119 245 45 56 209 152 139 120 205 54)
      (72 231 231 229 122 241 215 233 127 29 96 69 242 145 207 219 15 162 137 130 148 142 70 209 234 51 13 164 110 119 129 14) ) )
(test
   (170 146 47 242 84 79 142 158 105 69 108 188 12 48 160 7 126 101 29 25 160 95 41 184 115 119 129 165 114 161 123 178)
   (hmac
      (153 70 196 58 152 133 47 108 184 57 21 207 164 231 210 232 226 22 87 214 186 3 62 51 138 112 182 89 180 193 224 184)
      (83 103 202 233 31 99 239 200 53 226 11 231 219 118 70 228 100 48 224 188 69 208 26 120 154 254 41 35 192 10 204 36) ) )
(let (M (need 255 255) K (need 5 255))
   (hmac K M)
   (test M (need 255 255))
   (test K (need 5 255)) )
(let (M (need 255 255) K (need 255 255))
   (hmac K M)
   (test M (need 255 255))
   (test K (need 255 255)) )
(test
   (25 186 65 75 100 131 175 85 176 41 82 25 79 229 251 40 137 69 104)
   (lock_aead
      (range 0 31)
      (need 12 0)
      (list 1 2 3)
      (list 1 2 3) ) )
(test
   (list 1 2 3)
   (unlock_aead
      (range 0 31)
      (need 12 0)
      (25 186 65 75 100 131 175 85 176 41 82 25 79 229 251 40 137 69 104)
      (list 1 2 3) ) )
# test empty AD for *Enc-*Dec
(test
   (111 11 1)
   (unlock_aead
      (need 32 255)
      (need 12 77)
      (lock_aead
         (need 32 255)
         (need 12 77)
         (list 111 11 1)
         NIL )
      NIL ) )
# test empty AD and Plain for *Enc-*Dec
(test
   NIL
   (unlock_aead
      (need 32 255)
      (need 12 77)
      (lock_aead
         (need 32 255)
         (need 12 77)
         NIL
         NIL )
      NIL ) )
(do 1024
   (let
      (P (dh_generate (rand 1 8192))
         K (need 32 255)
         N (need 12 77)
         A (need (rand 1 4096) 255) )
      (setq @ (lock_aead K N P A))
      (test P (unlock_aead K N @ A)) ) )
(test
   (48 15 107 246 211 98 231 65 217 227 172 232 229 158 34 177)
   (mac (1 2 3) (11 22 33)) )
(test
   (43 240 18 246 125 48 121 117 233 216 101 48 212 150 16 14 79 145 13 105 42 123 228 36 148 210 181 37 184 109 139 93)
   (hash32 (11 22 33)) )
(test
   (9 123 250 53 159 212 113 160 205 122 27 101 224 194 89 135 231 117 15 134 152 20 141 85 191 223 97 126 252 61 127 123)
   (hmac
      (96 226 109 174 243 39 239 192 46 195 53 226 160 37 210 208 22 235 66 6 248 114 119 245 45 56 209 152 139 120 205 54)
      (45 115 241 28 139 206 207 9 4 151 134 71 194 122 143 105 160 104 228 176 193 164 68 32 231 95 180 138 69 76 211 38) ) )
(let C (1 2 3)
   (setq C (kdf1 C (need 6 7)))
   (test
      (104 211 53 248 136 243 74 213 47 230 238 96 86 2 208 13 17 230 139 226 151 190 109 137 226 234 120 218 246 184 131 157)
      C ) )
(let
   (C (96 226 109 174 243 39 239 192 46 195 53 226 160 37 210 208 22 235 66 6 248 114 119 245 45 56 209 152 139 120 205 54)
      K NIL
      D (0 197 93 126 110 173 19 251 91 149 112 91 255 138 50 103 142 222 251 199 232 94 157 192 170 239 239 122 57 228 13 60) )
   (setq
      @ (kdf2 C D)
      C (car @)
      K (cadr @) )
   (test
      (38 209 211 59 116 167 34 230 182 32 217 36 179 40 108 45 250 101 151 185 118 86 16 5 153 171 254 172 32 126 3 123)
      C )
   (test
      (227 135 208 181 15 132 52 205 205 55 93 86 9 223 33 179 224 219 174 139 246 188 63 3 46 240 193 221 131 128 169 126)
      K ) )
(let E (ephemrl-pair)
   (test
      (32 32)
      (mapcar length E) ) )
(let
   (C (70 214 141 30 59 223 144 92 122 50 252 30 169 76 89 128 110 11 35 59 36 175 210 199 98 130 186 133 116 62 225 193)
      K (87 244 112 210 168 70 88 136 182 50 149 202 157 55 22 131 166 73 137 9 162 100 112 75 123 104 108 153 130 14 241 152)
      Pre NIL
      Data (22 144 178 135 11 61 115 28 22 161 94 49 16 187 95 38 248 201 55 236 208 85 19 200 74 89 81 90 7 168 165 81) )
   (setq
      @ (kdf3 C Data)
      C (car @)
      Pre (cadr @)
      K (caddr @) )
   (test
      (250 148 154 144 226 5 29 75 250 110 254 176 95 154 90 104 107 127 221 83 129 211 69 155 119 76 156 180 113 147 76 33)
      C )
   (test
      (29 246 187 72 100 247 102 47 99 251 1 33 78 117 143 251 14 24 206 112 71 251 177 187 75 51 174 0 113 166 9 8)
      Pre )
   (test
      (181 99 125 229 116 94 158 129 147 187 143 146 6 101 167 204 101 202 74 243 105 180 26 70 95 221 210 22 248 214 34 5)
      K ) )
(test
   (0 0 0 0 21 129 233 125 244 16 34 17)
   (nonce 1234567890123456789) )
(test
   (0 0 0 0 255 255 231 137 4 35 199 138)
   (nonce 9999999999999999999) )
(test (big32 1234567) (flip (little32 1234567)))
(test (flip (big64 12345678901234)) (little64 12345678901234))

(msg 'OK-funcs)
